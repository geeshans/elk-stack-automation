{
    "variables": {
      "vpc": "{{env `BUILD_VPC_ID`}}",
      "subnet": "{{env `BUILD_SUBNET_ID`}}",
      "aws_region": "{{env `AWS_REGION`}}",
      "ssh_keypair_name": "{{env `SSH_KEYPAIR_NAME`}}",
      "ssh_private_key_file": "{{env `SSH_PRIVATE_KEY_FILE`}}",
      "ami_name": "packer-kibana-ami",
      "version": "v1"
    },
    "builders": [
      {
        "type": "amazon-ebs",
        "region": "{{user `aws_region`}}",
        "source_ami_filter": {
            "filters": {
                "name": "ubuntu/images/hvm-ssd/ubuntu-bionic*",
                "virtualization-type": "hvm",
                "root-device-type": "ebs"
            },
            "owners": ["099720109477"],
            "most_recent": true
        },
        "instance_type": "t2.medium",
        "ssh_username": "ubuntu",
        "ssh_keypair_name": "{{user `ssh_keypair_name`}}",
        "ssh_private_key_file": "{{user `ssh_private_key_file`}}",
        "ami_name": "{{user `ami_name` | clean_ami_name}}",
        "tags": {
          "Name": "{{user `ami_name`}}"
        },
        "run_tags": { 
          "Name": "{{user `ami_name`}}"
        },
        "run_volume_tags": {
          "Name": "{{user `ami_name`}}"
        },
        "ami_description": "Base Image, with Ansible and Elastic monitoring agents",
        "associate_public_ip_address": "true",
        "vpc_id": "{{user `vpc`}}",
        "subnet_id": "{{user `subnet`}}"
      }
    ],
    "provisioners": [
      {
        "type": "shell",
        "inline": [
          "sleep 15s",
          "sudo apt-get update",
          "sudo apt-get install -y aptitude jq python-minimal python-pip git",
          "sudo -H pip install pip --upgrade",
          "sudo -H pip install git+https://github.com/ansible/ansible.git@devel boto3",
          "echo 'PATH=\"/root/bin:/root/.local/bin:$PATH\"' | sudo tee --append /root/.profile"
        ]
      },
      {
        "type": "ansible-local",
        "playbook_dir": "./ansible",
        "playbook_file": "./ansible/aws-kibana.yml"
      }
    ],
    "post-processors": [
      {
        "type": "manifest",
        "output": "manifest.json",
        "strip_path": true
      }
    ]
  
  }